@startuml

package "bfmb-comcenter" {
	class BFMBServer {
		-BFMBServer _instance
		-any jayson
		-MongoEvents mongoEvents
		-ConnectorManager connectorManager
		-AuthHandler authHandler
		-MessageHandler messageHandler
		+BFMBServer()
		+{static} BFMBServer get sharedInstance()
		+void startServer()
		+void startConnectorManager()
		+void createJaysonServer()
		+void configureJaysonServer()
		+ConnectorManager getConnectorManager()
		+AuthHandler getAuthHandler()
		+MessageHandler getMessageHandler()
		-void welcomeMessage()
		-void prepareMongoConnection()
	}

	class MongoEvents {
		+void success()
		+void error(err: Error)
		+void disconnected()
		+void close()
	}

	class ConnectorManager {
		#Connector[] connectors
		+ConnectorManager()
		+Connector getConnector(name: string)
		+void addConnectors()
	}

	class AuthHandler {
		-void addUserConnection(network: any, callback: Function)
		+void authenticate(args: any, callback: Function)
		+void verifyToken(token: string, callback: Function)
		+void closeOldTokenConnections(token: string)
	}

	class MessageHandler {
		+void getMe(args: any, callback: Function)
		+void sendMessage(args: any, callback: Function)
		+void receiveMessage(args: any, callback: Function)
		-number tokenHasNetwork(network: string, networks: Array<any>)
	}

	BFMBServer-->BFMBServer
	BFMBServer*---MongoEvents
	BFMBServer*---ConnectorManager
	BFMBServer*--AuthHandler
	BFMBServer*--MessageHandler
}

package "bfmb-base-connector" {
	class Connector {
		#string name
		#Connection[] connections
		+Connector(name: string)
		+string getName()
		+{abstract} void addConnection(options: any, callback: Function)
		+number getConnectionIndex(id: string)
		+Connection getConnection(id: string)
		+void removeConnection(id: string, callback: Function)
		+{abstract} void getMe(id: string, options: any, callback: Function)
		+{abstract} void receiveMessage(id: string, options: any, callback: Function)
		+{abstract} void sendMessage(id: string, options: any, callback: Function)
	}

	class Connection {
		#string id
		+Connection(options: any)
		+string getId()
	}

	ConnectorManager*--Connector
	Connector*--Connection
    MessageHandler---->Connection
}

package "bfmb-telegram-connector" {
	class TelegramConnector {
		+TelegramConnector()
		+void addConnection(options: any, callback: Function)
		+void getMe(id: string, options: any = {}, callback: Function)
		+void receiveMessage(id: string, options: any = {}, callback: Function)
		+void sendMessage(id: string, options: any = {}, callback: Function)
		-any getUpdateOffset(connection: TelegramConnection, options: any)
		-number parseUpdateOffset(response: TelegramBot.Update[])
		-Error verifySendMessageOptions(options: any)
	}

	class TelegramConnection {
		-string token
		-number last_update_id
		-TelegramBot bot
		+TelegramConnection(options: any)
		+TelegramBot getBot()
		+number getOffsetUpdateId()
		+void setOffsetUpdateId(lastUpdateId: number)
		-any getTelegramBotOptions(options: any)

	}

	Connector<|---TelegramConnector
	Connection<|---TelegramConnection
}

package "bfmb-tado-connector" {
    class TadoConnector {
    	-string[] homeIdRequiredMethods
    	-string[] deviceIdRequiredMethods
    	-string[] zoneIdRequiredMethods
    	-string[] timetableIdRequiredMethods
    	-string[] powerTempRequiredMethods
    	+TadoConnector()
        +void addConnection(options: any, callback: Function)
        +void getMe(id: string, options: any = {}, callback: Function)
        +void receiveMessage(id: string, options: any = {}, callback: Function)
        -Error verifyReceiveMessageBaseOptions(options: any)
        -void callHttpApiGetMethod(connection: TadoConnection, options: any, callback: Function)
        +void sendMessage(id: string, options: any = {}, callback: Function)
        -Error verifySendMessageBaseOptions(options: any)
        -void callHttpApiPutMethod(connection: TadoConnection, options: any, callback: Function)
    }

    class TadoConnection {
    	-string username
    	-string password
    	-TadoClient tadoClient
    	+TadoConnection(options: any)
    	+string getUsername()
    	+string getPassword()
    	+TadoClient getClient()
    }

    Connector<|----TadoConnector
    Connection<|----TadoConnection
}


@enduml
